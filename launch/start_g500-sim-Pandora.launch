<launch>
	<arg name="enableLog" value="false" />
	<arg name="ROSMaster" value="http://narcis-mbp:11311/" />
	<arg name="simulatedClock" value="false" />

	<!-- LOAD PARAMETERS -->
	<rosparam command="load" file="$(find cola2_safety)/config/safety_g500.yaml" />	
	<rosparam command="load" file="$(find cola2_safety)/config/fake_main_board.yaml" />
	<rosparam command="load" file="$(find cola2_navigation)/config/dynamics_odin.yaml" />
	<rosparam command="load" file="$(find cola2_control)/config/thruster_allocator_sim.yaml" />
	<rosparam command="load" file="$(find cola2_control)/config/velocity_controller_sim.yaml" />		
	<rosparam command="load" file="$(find cola2_control)/config/joy.yaml"/>
	<rosparam command="load" file="$(find cola2_control)/config/pilot.yaml"/>	
	<rosparam command="load" file="$(find cola2_navigation)/config/navigator.yaml" />
	<rosparam command="load" file="$(find cola2_control)/../launch/mission.yaml" />

	<rosparam command="load" file="$(find cola2_control)/config/arm_controller_5DoF.yaml" />

	<rosparam param="urdf_root"> </rosparam>
	
	<!-- OVERRIDE BASIC MISSION PARAMETERS -->
	<rosparam command="load" file="$(find cola2_safety)/../launch/basic_mission_parameters.yaml" />	

	<group if="$(arg simulatedClock)">
		<param name="/time_scale" value="2" />
		<param name="/clock_publish_rate" value="1000" /> 
		<node name="sim_clock" pkg="cola2_lib" type="sim_clock"/>
	</group>

	<!-- ################## AVOID TO TOUCH ANYTHING BELOW THIS LINE ##################### -->

	<!-- LOAD NODES -->

	<!-- Safety nodes -->
	<node name="safety_g500" pkg="cola2_safety" type="safety_g500.py" output="screen"/>

	<!-- Run dynamics -->		
	<node name="dynamics" pkg="cola2_navigation" type="dynamics.py" respawn="false"/>

	<!-- Enable fake main control board -->
	<node name="fake_main_board_g500" pkg="cola2_safety" type="fake_main_board_g500.py" />

	<!-- Run Control Stack -->
	<node name="teleoperation" pkg="cola2_control" type="teleoperation"/>
	<node name="thruster_allocator" pkg="cola2_control" type="thruster_allocator.py"/>
	<node name="velocity_controller" pkg="cola2_control" type="velocity_controller.py"/> 
	<node name="merge_bvr" pkg="cola2_control" type="merge_bvr.py"/>
	<node name="pilot" pkg="cola2_control" type="pilot.py" output="screen"/>
	<node name="captain" pkg="cola2_control" type="captain.py" output="screen"/>
	
	<!-- Run Navigation Stack -->
	<node name="navigator" pkg="cola2_navigation" type="navigator.py" />
	<node name="pose_ekf_slam" pkg="pose_ekf_slam" type="pose_ekf_slam.py" output="screen">
		<param name="world_frame_name" type="string" value="world" />
		<param name="robot_frame_name" type="string" value="girona500" />
	</node>

	<group>
		<!-- <node name="keyboard" pkg="cola2_control" type="keyboard" /> -->
		<node name="keyboardArm" pkg="cola2_control" type="keyboardArm" />
 	</group>


	<node name="arm_controller" pkg="cola2_control" type="arm_controller" output="screen" >
	      <param name="urdf_path" value="$(find udg_pandora)/scenes/g500ARMPandora.urdf"/>
	</node>

	<node name="arm_manipulator" pkg="cola2_control" type="arm_manipulator.py" output="screen" />

	<node if="$(arg enableLog)" name="bag_record" output="screen" pkg="rosbag" type="record" args="-a -x '(/camera/image_m(.)*)|(/camera/image_c(.)*)|(/camera/image_rect/(.)*)|(/camera/image_rect)|(/camera/image_raw)|(/camera/image_rect_color/compressed)|(/camera/image_raw/compressed)' --split --size 2048 -o /home/$(env LOGNAME)/g500" />

</launch>

